{# Template to render items recursively. #}

{% if userIsAdmin is defined %}
	{{ _self.show(item,userIsAdmin,user) }} 	{# Render the first item by making a call to the show(item) macro#}
{% else %}
	{{ _self.show(item) }} 	{# Render the first item by making a call to the show(item) macro#}
{% endif %}

{% macro show(item,userIsAdmin,user) %}	{# Item rendering macro/function #}
	{% if item is not null %}
	{
		"id" : {{ item.id | default("") | json_encode | raw }},
		"site_id" : {{ item.siteid | default("") | json_encode | raw }},
    	"user_id" : {{ item.user.id | default("") | json_encode | raw }},
        "username" : {{ item.user.username | default("") | json_encode | raw }},
        "display_name" : {{ item.user.displayname | default("") | json_encode | raw }},
        "title" : {{ item.title | json_encode | raw}},
        "description" : {{ item.description | default("") | json_encode | raw}},
		"text" : {{ item.text | default("") | json_encode | raw}},
		"uri" : "{{ item.uri }}",
		"attribution_uri" : "{{ item.attributionuri }}",
		"date_created" : "{{ item.datecreated | date("Y-m-d") }}",
		"media_type" : "{{ item.mediatype }}",
		"layer_type" : "{{ item.layertype }}",
		"archive" : "{{ item.archive }}",
		"thumbnail_url" : {{ item.thumbnailurl | json_encode | raw}},
		"media_geo_latitude" : {{ item.mediageolatitude | json_encode | raw}},
		"media_geo_longitude" : {{ item.mediageolongitude | json_encode | raw}},
		"media_date_created" : {{ item.mediadatecreated is empty ? "null": item.mediadatecreated | date("m/d/Y") | json_encode | raw }},
		"media_date_created_end" : {{ item.mediadatecreatedend is empty ? "null" : item.mediadatecreatedend | date("m/d/Y") | json_encode | raw}},
		"media_creator_username" : "{{ item.mediacreatorusername }}",
		"media_creator_realname" : "{{ item.mediacreatorrealname }}",
		"child_items_count" : {{ item.childitemscount | default(0) }},
		"attributes" : {{ item.attributes | default([ ]) | json_encode | raw}},
		"child_items":
		[
			{% for child in item.childitems %}
				{# Item is a collection. Render the children by recursively calling the macro #}
	            {{ _self.show(child) }}
				{%- if loop.index0 < item.childitems|length - 1 -%}
				,
				{%- endif -%}
	        {% endfor %}
		],
		"tags":
			{{ item.tags | default([ ]) | json_encode | raw}},
		{%- if (user.id is defined and user.id == item.userid) or (userIsAdmin is defined and userIsAdmin) -%}
			"editable" : true
		{%- else -%}
			"editable" : false
		{%- endif -%}

	}
	{% else %}
		{}
	{% endif %}
{% endmacro %}
