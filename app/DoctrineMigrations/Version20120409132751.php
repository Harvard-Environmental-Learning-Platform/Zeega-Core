<?php

namespace Application\Migrations;

use Doctrine\DBAL\Migrations\AbstractMigration,
    Doctrine\DBAL\Schema\Schema;

/**
 * Auto-generated Migration: Please modify to your need!
 */
class Version20120409132751 extends AbstractMigration
{
    public function up(Schema $schema)
    {
        // this up() migration is autogenerated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() != "mysql");
        
        $this->addSql("CREATE TABLE frames_layers (frame_id INT NOT NULL, layer_id BIGINT NOT NULL, INDEX IDX_6AAC1D673FA3C347 (frame_id), INDEX IDX_6AAC1D67EA6EFDCD (layer_id), PRIMARY KEY(frame_id, layer_id)) ENGINE = InnoDB");
        $this->addSql("ALTER TABLE frames_layers ADD CONSTRAINT FK_6AAC1D673FA3C347 FOREIGN KEY (frame_id) REFERENCES frame(id)");
        $this->addSql("ALTER TABLE frames_layers ADD CONSTRAINT FK_6AAC1D67EA6EFDCD FOREIGN KEY (layer_id) REFERENCES layer(id)");
    }
    
    public function postUp(Schema $schema)
    {
        $conn = $this->connection;

        $sql = "SELECT id, layers FROM frame";
        $stmt = $conn->query($sql); // Simple, but has several drawbacks
        
        while ($row = $stmt->fetch()) 
        {
            $frameId = $row["id"];
            $layers = unserialize($row['layers']);
            if(is_array($layers))
            {
                foreach($layers as $layerId)
                {
                    if(is_integer($layerId))
                    {
                        $valStmt = $conn->executeQuery('SELECT id from layer where id = ?', array($layerId), array(\PDO::PARAM_INT));

                        if(count($valStmt->fetchAll()) > 0)
                            $conn->executeUpdate('INSERT IGNORE into frames_layers (frame_id,layer_id) values(?, ?)', array($frameId, $layerId));
                    }
                }
            }
        }
    }

    public function down(Schema $schema)
    {
        // this down() migration is autogenerated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() != "mysql");

        $this->addSql("DROP TABLE frames_layers");
    }
}
